//
// Responsive: Utility classes
// --------------------------------------------------

// IE10 in Windows (Phone) 8
//
// Support for responsive views via media queries is kind of borked in IE10, for
// Surface/desktop in split view and for Windows Phone 8. This particular fix
// must be accompanied by a snippet of JavaScript to sniff the user agent and
// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at
// our Getting Started page for more information on this bug.
//
// For more information, see the following:
//
// Issue: https://github.com/twbs/bootstrap/issues/10497
// Docs: http://getbootstrap.com/getting-started/#browsers
// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/

$-ms-viewport {
  width: device-width;
}

// Hide from screenreaders and browsers
//
// Credit: HTML5 Boilerplate

.hidden {
  display: none !important;
  visibility: hidden !important;
}

// Visibility utilities

.visible-xs {
  @include responsive-invisibility();
  @media (max-width: $screen-xs-max) {
	@include responsive-visibility();
  }
  &.visible-sm {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	  @include responsive-visibility();
	}
  }
  &.visible-md {
	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	  @include responsive-visibility();
	}
  }
  &.visible-lg {
	@media (min-width: $screen-lg-min) {
	  @include responsive-visibility();
	}
  }
}

.visible-sm {
  @include responsive-invisibility();
  &.visible-xs {
	@media (max-width: $screen-xs-max) {
	  @include responsive-visibility();
	}
  }
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	@include responsive-visibility();
  }
  &.visible-md {
	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	  @include responsive-visibility();
	}
  }
  &.visible-lg {
	@media (min-width: $screen-lg-min) {
	  @include responsive-visibility();
	}
  }
}

.visible-md {
  @include responsive-invisibility();
  &.visible-xs {
	@media (max-width: $screen-xs-max) {
	  @include responsive-visibility();
	}
  }
  &.visible-sm {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	  @include responsive-visibility();
	}
  }
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	@include responsive-visibility();
  }
  &.visible-lg {
	@media (min-width: $screen-lg-min) {
	  @include responsive-visibility();
	}
  }
}

.visible-lg {
  @include responsive-invisibility();
  &.visible-xs {
	@media (max-width: $screen-xs-max) {
	  @include responsive-visibility();
	}
  }
  &.visible-sm {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	  @include responsive-visibility();
	}
  }
  &.visible-md {
	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	  @include responsive-visibility();
	}
  }
  @media (min-width: $screen-lg-min) {
	@include responsive-visibility();
  }
}

.hidden-xs {
  @include responsive-visibility();
  @media (max-width: $screen-xs-max) {
	@include responsive-invisibility();
  }
  &.hidden-sm {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	  @include responsive-invisibility();
	}
  }
  &.hidden-md {
	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	  @include responsive-invisibility();
	}
  }
  &.hidden-lg {
	@media (min-width: $screen-lg-min) {
	  @include responsive-invisibility();
	}
  }
}

.hidden-sm {
  @include responsive-visibility();
  &.hidden-xs {
	@media (max-width: $screen-xs-max) {
	  @include responsive-invisibility();
	}
  }
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	@include responsive-invisibility();
  }
  &.hidden-md {
	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	  @include responsive-invisibility();
	}
  }
  &.hidden-lg {
	@media (min-width: $screen-lg-min) {
	  @include responsive-invisibility();
	}
  }
}

.hidden-md {
  @include responsive-visibility();
  &.hidden-xs {
	@media (max-width: $screen-xs-max) {
	  @include responsive-invisibility();
	}
  }
  &.hidden-sm {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	  @include responsive-invisibility();
	}
  }
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	@include responsive-invisibility();
  }
  &.hidden-lg {
	@media (min-width: $screen-lg-min) {
	  @include responsive-invisibility();
	}
  }
}

.hidden-lg {
  @include responsive-visibility();
  &.hidden-xs {
	@media (max-width: $screen-xs-max) {
	  @include responsive-invisibility();
	}
  }
  &.hidden-sm {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
	  @include responsive-invisibility();
	}
  }
  &.hidden-md {
	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
	  @include responsive-invisibility();
	}
  }
  @media (min-width: $screen-lg-min) {
	@include responsive-invisibility();
  }
}

// Print utilities
.visible-print {
  @include responsive-invisibility();
}

@media print {
  .visible-print {
	@include responsive-visibility();
  }

  .hidden-print {
	@include responsive-invisibility();
  }
}
